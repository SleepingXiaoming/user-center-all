import _objectSpread from "@babel/runtime/helpers/esm/objectSpread2";
import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import { useStyle as useAntdStyle } from '@ant-design/pro-utils';

var genProListStyle = function genProListStyle(token) {
  return _defineProperty({}, token.componentCls, {
    lineHeight: '1',
    '&-container': {
      display: 'flex',
      justifyContent: 'space-between',
      paddingBlock: token.padding,
      paddingInline: 0,
      ' &-mobile': {
        flexDirection: 'column'
      }
    },
    '&-title': {
      display: 'flex',
      alignItems: 'center',
      justifyContent: 'flex-start',
      color: token.colorTextHeading,
      fontWeight: '500',
      fontSize: token.fontSizeLG
    },
    '&-search:not(:last-child)': {
      display: 'flex',
      alignItems: 'center',
      justifyContent: 'flex-start'
    },
    '&-setting-item': {
      marginBlock: 0,
      marginInline: 4,
      color: token.colorIconHover,
      fontSize: token.fontSizeLG,
      cursor: 'pointer',
      '> span': {
        display: 'block',
        width: '100%',
        height: '100%'
      },
      '&:hover': {
        color: token.colorPrimary
      }
    },
    '&-left': {
      display: 'flex',
      alignItems: 'center',
      justifyContent: 'flex-start'
    },
    '&-right': {
      display: 'flex',
      justifyContent: 'flex-end'
    },
    '&-extra-line': {
      marginBlockEnd: token.margin
    },
    '&-filter': _defineProperty({
      '&:not(:last-child)': {
        marginInlineEnd: token.margin
      },
      display: 'flex',
      alignItems: 'center'
    }, "div.$".concat(token.antCls, "-pro-table-search"), {
      marginBlock: 0,
      marginInline: 0,
      paddingBlock: 0,
      paddingInline: 0
    }),
    '&-inline-menu-item': {
      display: 'inline-block',
      marginInlineEnd: token.marginLG,
      cursor: 'pointer',
      opacity: '0.75',
      '&-active': {
        fontWeight: 'bold',
        opacity: '1'
      }
    },
    '&-dropdownmenu-label': _defineProperty({
      fontWeight: 'bold',
      fontSize: token.fontSizeIcon,
      textAlign: 'center',
      cursor: 'pointer'
    }, "".concat(token.antCls, "-tabs-top > ").concat(token.antCls, "-tabs-nav"), _defineProperty({
      marginBlockEnd: 0,
      '&::before': {
        borderBlockEnd: 0
      }
    }, "".concat(token.antCls, "-tabs-nav-list"), {
      marginBlockStart: 0,
      '${token.antCls}-tabs-tab': {
        paddingBlockStart: 0
      }
    })),
    '@media (max-width: 575px)': _defineProperty({}, token.componentCls, {
      '&-container': {
        display: 'flex',
        flexWrap: 'wrap'
      },
      '&-left': {
        marginBlockEnd: '16px'
      }
    })
  });
};

export function useStyle(prefixCls) {
  return useAntdStyle('DragSortTable', function (token) {
    var proListToken = _objectSpread(_objectSpread({}, token), {}, {
      componentCls: ".".concat(prefixCls)
    });

    return [genProListStyle(proListToken)];
  });
}