import _objectSpread from "@babel/runtime/helpers/esm/objectSpread2";
import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import { useStyle as useAntdStyle } from '@ant-design/pro-utils';

var genProStyle = function genProStyle(token) {
  var _overlay, _$concat2, _ref;

  return _ref = {}, _defineProperty(_ref, token.componentCls, {
    width: 'auto',
    '&-title': {
      display: 'flex',
      alignItems: 'center',
      justifyContent: 'space-between',
      height: '32px'
    },
    '&-overlay': (_overlay = {
      '*': {
        fontFamily: token.fontFamily,
        boxSizing: 'border-box'
      }
    }, _defineProperty(_overlay, "".concat(token.antCls, "-popover-inner-content"), {
      width: '200px',
      paddingBlock: 0,
      paddingInline: 0,
      paddingBlockEnd: 8
    }), _defineProperty(_overlay, "".concat(token.antCls, "-tree-node-content-wrapper:hover"), {
      backgroundColor: 'transparent'
    }), _defineProperty(_overlay, "".concat(token.antCls, "-tree-draggable-icon"), {
      cursor: 'grab'
    }), _defineProperty(_overlay, "".concat(token.antCls, "-tree-treenode"), _defineProperty({
      alignItems: 'center',
      '&:hover': _defineProperty({
        backgroundColor: token.controlItemBgActive
      }, "".concat(token.componentCls, "-list-item-option"), {
        display: 'block'
      })
    }, "".concat(token.antCls, "-tree-checkbox"), {
      insetBlockStart: 0,
      marginBlock: 0,
      marginInline: 0,
      marginInlineEnd: '4px'
    })), _overlay)
  }), _defineProperty(_ref, "".concat(token.componentCls, "-list"), (_$concat2 = {
    display: 'flex',
    flexDirection: 'column',
    width: '100%',
    paddingBlockStart: 8
  }, _defineProperty(_$concat2, "&".concat(token.componentCls, "-list-group"), {
    paddingBlockStart: 0
  }), _defineProperty(_$concat2, '&-title', {
    marginBlockStart: '6px',
    marginBlockEnd: '6px',
    paddingInlineStart: '24px',
    color: token.colorTextSecondary,
    fontSize: '12px'
  }), _defineProperty(_$concat2, '&-item', {
    display: 'flex',
    alignItems: 'center',
    '&-title': {
      flex: 1
    },
    '&-option': {
      display: 'none',
      float: 'right',
      cursor: 'pointer',
      '> span': {
        '> span.anticon': {
          color: token.colorPrimary
        }
      },
      '> span + span': {
        marginInlineStart: 8
      }
    }
  }), _$concat2)), _ref;
};

export function useStyle(prefixCls) {
  return useAntdStyle('CheckCard', function (token) {
    var proToken = _objectSpread(_objectSpread({}, token), {}, {
      componentCls: ".".concat(prefixCls)
    });

    return [genProStyle(proToken)];
  });
}