import type { CSSInterpolation, CSSObject } from '@ant-design/cssinjs';
import type React from 'react';
import type { AliasToken } from './token';
/**
 * 把一个颜色设置一下透明度
 * @example (#fff, 0.5) => rgba(255, 255, 255, 0.5)
 * @param baseColor {string}
 * @param alpha {0-1}
 * @returns rgba {string}
 */
export declare const setAlpha: (baseColor: string, alpha: number) => string;
/**
 * 把一个颜色修改一些明度
 * @example (#000, 50) => #808080
 * @param baseColor {string}
 * @param brightness {0-100}
 * @returns hexColor {string}
 */
export declare const lighten: (baseColor: string, brightness: number) => string;
export declare type GenerateStyle<ComponentToken extends object = AliasToken, ReturnType = CSSInterpolation> = (token: ComponentToken) => ReturnType;
/**
 * 如果 antd 里面没有，就用我 mock 的，这样 antd@4 和 antd@5 可以兼容
 */
declare const useToken: () => {
    theme: any;
    token: {
        blue: string;
        purple: string;
        cyan: string;
        green: string;
        magenta: string;
        pink: string;
        red: string;
        orange: string;
        yellow: string;
        volcano: string;
        geekblue: string;
        gold: string;
        lime: string;
        colorPrimary: string;
        colorSuccess: string;
        colorWarning: string;
        colorError: string;
        colorInfo: string;
        colorTextBase: string;
        colorTextLightSolid: string;
        colorBgBase: string;
        fontFamily: string;
        fontSizeBase: number;
        gridUnit: number;
        gridBaseStep: number;
        lineWidth: number;
        lineType: string;
        motionUnit: number;
        motionBase: number;
        motionEaseOutCirc: string;
        motionEaseInOutCirc: string;
        motionEaseOut: string;
        motionEaseInOut: string;
        motionEaseOutBack: string;
        motionEaseInQuint: string;
        motionEaseOutQuint: string;
        radiusBase: number;
        sizeUnit: number;
        sizeBaseStep: number;
        sizePopupArrow: number;
        controlHeight: number;
        zIndexBase: number;
        zIndexPopupBase: number;
        opacityImage: number;
        'blue-1': string;
        'blue-2': string;
        'blue-3': string;
        'blue-4': string;
        'blue-5': string;
        'blue-6': string;
        'blue-7': string;
        'blue-8': string;
        'blue-9': string;
        'blue-10': string;
        'purple-1': string;
        'purple-2': string;
        'purple-3': string;
        'purple-4': string;
        'purple-5': string;
        'purple-6': string;
        'purple-7': string;
        'purple-8': string;
        'purple-9': string;
        'purple-10': string;
        'cyan-1': string;
        'cyan-2': string;
        'cyan-3': string;
        'cyan-4': string;
        'cyan-5': string;
        'cyan-6': string;
        'cyan-7': string;
        'cyan-8': string;
        'cyan-9': string;
        'cyan-10': string;
        'green-1': string;
        'green-2': string;
        'green-3': string;
        'green-4': string;
        'green-5': string;
        'green-6': string;
        'green-7': string;
        'green-8': string;
        /**
         * 封装了一下 antd 的 useStyle，支持了一下antd@4
         * @param componentName {string} 组件的名字
         * @param styleFn {GenerateStyle} 生成样式的函数
         * @returns {UseStyleResult}
         */
        'green-9': string;
        'green-10': string;
        'magenta-1': string;
        'magenta-2': string;
        'magenta-3': string;
        'magenta-4': string;
        'magenta-5': string;
        'magenta-6': string;
        'magenta-7': string;
        'magenta-8': string;
        'magenta-9': string;
        'magenta-10': string;
        'pink-1': string;
        'pink-2': string;
        'pink-3': string;
        'pink-4': string; /**
         * pro 的 类
         * @type {string}
         * @example .ant-pro
         */
        'pink-5': string;
        'pink-6': string;
        'pink-7': string;
        'pink-8': string;
        'pink-9': string;
        'pink-10': string;
        'red-1': string;
        'red-2': string;
        'red-3': string;
        'red-4': string;
        'red-5': string;
        'red-6': string;
        'red-7': string;
        'red-8': string;
        'red-9': string;
        'red-10': string;
        'orange-1': string;
        'orange-2': string;
        'orange-3': string;
        'orange-4': string;
        'orange-5': string;
        'orange-6': string;
        'orange-7': string;
        'orange-8': string;
        'orange-9': string;
        'orange-10': string;
        'yellow-1': string;
        'yellow-2': string;
        'yellow-3': string;
        'yellow-4': string;
        'yellow-5': string;
        'yellow-6': string;
        'yellow-7': string;
        'yellow-8': string;
        'yellow-9': string;
        'yellow-10': string;
        'volcano-1': string;
        'volcano-2': string;
        'volcano-3': string;
        'volcano-4': string;
        'volcano-5': string;
        'volcano-6': string;
        'volcano-7': string;
        'volcano-8': string;
        'volcano-9': string;
        'volcano-10': string;
        'geekblue-1': string;
        'geekblue-2': string;
        'geekblue-3': string;
        'geekblue-4': string;
        'geekblue-5': string;
        'geekblue-6': string;
        'geekblue-7': string;
        'geekblue-8': string;
        'geekblue-9': string;
        'geekblue-10': string;
        'gold-1': string;
        'gold-2': string;
        'gold-3': string;
        'gold-4': string;
        'gold-5': string;
        'gold-6': string;
        'gold-7': string;
        'gold-8': string;
        'gold-9': string;
        'gold-10': string;
        'lime-1': string;
        'lime-2': string;
        'lime-3': string;
        'lime-4': string;
        'lime-5': string;
        'lime-6': string;
        'lime-7': string;
        'lime-8': string;
        'lime-9': string;
        'lime-10': string;
        colorFill: string;
        colorFillSecondary: string;
        colorFillTertiary: string;
        colorFillQuaternary: string;
        bgLayout: string;
        colorBgContainer: string;
        colorBgElevated: string;
        colorBorder: string;
        colorBorderSecondary: string;
        colorSplit: string;
        colorText: string;
        colorTextSecondary: string;
        colorTextTertiary: string;
        colorTextQuaternary: string;
        colorPrimaryBg: string;
        colorPrimaryBgHover: string;
        colorPrimaryBorder: string;
        colorPrimaryBorderHover: string;
        colorPrimaryHover: string;
        colorPrimaryActive: string;
        colorPrimaryTextHover: string;
        colorPrimaryText: string;
        colorPrimaryTextActive: string;
        colorSuccessBg: string;
        colorSuccessBgHover: string;
        colorSuccessBorder: string;
        colorSuccessBorderHover: string;
        colorSuccessHover: string;
        colorSuccessActive: string;
        colorSuccessTextHover: string;
        colorSuccessText: string;
        colorSuccessTextActive: string;
        colorErrorBg: string;
        colorErrorBgHover: string;
        colorErrorBorder: string;
        colorErrorBorderHover: string;
        colorErrorHover: string;
        colorErrorActive: string;
        colorErrorTextHover: string;
        colorErrorText: string;
        colorErrorTextActive: string;
        colorWarningBg: string;
        colorWarningBgHover: string;
        colorWarningBorder: string;
        colorWarningBorderHover: string;
        colorWarningHover: string;
        colorWarningActive: string;
        colorWarningTextHover: string;
        colorWarningText: string;
        colorWarningTextActive: string;
        colorInfoBg: string;
        colorInfoBgHover: string;
        colorInfoBorder: string;
        colorInfoBorderHover: string;
        colorInfoHover: string;
        colorInfoActive: string;
        colorInfoTextHover: string;
        colorInfoText: string;
        colorInfoTextActive: string;
        colorBgMask: string;
        colorBgSpotlight: string;
        motionDurationFast: string;
        motionDurationMid: string;
        motionDurationSlow: string;
        fontSizes: number[];
        lineHeights: number[];
        sizeSpaceSM: number;
        sizeSpace: number;
        sizeSpaceXS: number;
        sizeSpaceXXS: number;
        gridSpaceSM: number;
        gridSpaceBase: number;
        gridSpaceLG: number;
        gridSpaceXL: number;
        gridSpaceXXL: number;
        lineWidthBold: number;
        radiusSM: number;
        radiusLG: number;
        radiusXL: number;
        controlHeightSM: number;
        controlHeightXS: number;
        controlHeightLG: number;
        Layout: {
            colorBgHeader: string;
            colorBgBody: string;
        };
        colorLink: string;
        colorLinkHover: string;
        colorLinkActive: string;
        colorFillContent: string;
        colorFillContentHover: string;
        colorFillAlter: string;
        colorBgContainerDisabled: string;
        colorBorderBg: string;
        colorTextPlaceholder: string;
        colorTextDisabled: string;
        colorTextHeading: string;
        colorTextLabel: string;
        colorTextDescription: string;
        colorHighlight: string;
        colorIcon: string;
        colorIconHover: string;
        colorErrorOutline: string;
        colorWarningOutline: string;
        fontSizeSM: number;
        fontSize: number;
        fontSizeLG: number;
        fontSizeXL: number;
        fontSizeHeading1: number;
        fontSizeHeading2: number;
        fontSizeHeading3: number;
        fontSizeHeading4: number;
        fontSizeHeading5: number;
        fontSizeIcon: number;
        lineHeight: number;
        lineHeightLG: number;
        lineHeightSM: number;
        lineHeightHeading1: number;
        lineHeightHeading2: number;
        lineHeightHeading3: number;
        lineHeightHeading4: number;
        lineHeightHeading5: number;
        controlLineWidth: number;
        controlOutlineWidth: number;
        controlInteractiveSize: number;
        controlItemBgHover: string;
        controlItemBgActive: string;
        controlItemBgActiveHover: string;
        controlItemBgActiveDisabled: string;
        controlTmpOutline: string;
        controlOutline: string;
        controlLineType: string;
        controlRadius: number;
        fontWeightStrong: number;
        opacityLoading: number;
        linkDecoration: string;
        linkHoverDecoration: string;
        linkFocusDecoration: string;
        controlPaddingHorizontal: number;
        controlPaddingHorizontalSM: number;
        padding: number;
        margin: number;
        paddingXXS: number;
        paddingXS: number;
        paddingSM: number;
        paddingLG: number;
        paddingXL: number;
        marginXXS: number;
        marginXS: number;
        marginSM: number;
        marginLG: number;
        marginXL: number;
        marginXXL: number;
        boxShadow: string;
        screenXS: number;
        screenXSMin: number;
        screenXSMax: number;
        screenSM: number;
        screenSMMin: number;
        screenSMMax: number;
        screenMD: number;
        screenMDMin: number;
        screenMDMax: number;
        screenLG: number;
        screenLGMin: number;
        screenLGMax: number;
        screenXL: number;
        screenXLMin: number;
        screenXLMax: number;
        screenXXL: number;
        screenXXLMin: number;
        screenXXLMax: number;
        boxShadowPopoverArrow: string;
        boxShadowPopoverArrowBottom: string;
        boxShadowSegmentedSelectedItem: string;
        boxShadowCard: string;
        boxShadowDrawerRight: string;
        boxShadowDrawerLeft: string;
        boxShadowDrawerUp: string;
        boxShadowDrawerDown: string;
        boxShadowTabsOverflowLeft: string;
        boxShadowTabsOverflowRight: string;
        boxShadowTabsOverflowTop: string;
        boxShadowTabsOverflowBottom: string;
        _tokenKey: string;
        _hashId: string;
    };
    hashId: string;
};
export { useToken };
export declare type UseStyleResult = {
    wrapSSR: (node: React.ReactElement) => React.ReactElement;
    hashId: string;
};
export declare type ProAliasToken = AliasToken & {
    /**
     * pro 的 className
     * @type {string}
     * @example .ant-pro
     */
    proComponentsCls: string;
    /**
     * antd 的 className
     * @type {string}
     * @example .ant
     */
    antCls: string;
};
export declare const resetComponent: (token: ProAliasToken) => CSSObject;
export declare const operationUnit: (token: ProAliasToken) => CSSObject;
/**
 * 封装了一下 antd 的 useStyle，支持了一下antd@4
 * @param componentName {string} 组件的名字
 * @param styleFn {GenerateStyle} 生成样式的函数
 * @returns {UseStyleResult}
 */
export declare function useStyle(componentName: string, styleFn: (token: ProAliasToken) => CSSInterpolation): UseStyleResult;
