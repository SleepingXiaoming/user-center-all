import type { NamePath } from 'antd/es/form/interface';
import dayjs from 'dayjs';
import type { ProFieldValueType } from '../typing';
declare type DateFormatter = 'number' | 'string' | ((value: dayjs.Dayjs, valueType: string) => string | number) | false;
export declare const dateFormatterMap: {
    time: string;
    timeRange: string;
    date: string;
    dateWeek: string;
    dateMonth: string;
    dateQuarter: string;
    dateYear: string;
    dateRange: string;
    dateTime: string;
    dateTimeRange: string;
};
export declare function isPlainObject(o: {
    constructor: any;
}): boolean;
/**
 * 根据不同的格式转化 dayjs
 *
 * @param value
 * @param dateFormatter
 * @param valueType
 */
export declare const convertMoment: (value: dayjs.Dayjs, dateFormatter: string | false | ((value: dayjs.Dayjs, valueType: string) => string | number), valueType: string) => string | number | dayjs.Dayjs;
/**
 * 这里主要是来转化一下数据 将 dayjs 转化为 string 将 all 默认删除
 *
 * @param value
 * @param dateFormatter
 * @param proColumnsMap
 */
export declare const conversionMomentValue: <T extends {} = any>(value: T, dateFormatter: DateFormatter, valueTypeMap: Record<string, {
    valueType: ProFieldValueType;
    dateFormat: string;
} | any>, omitNil?: boolean, parentKey?: NamePath) => T;
export {};
