import type { GlobalToken } from 'antd/es/theme/interface';
import React from 'react';
export declare type BaseLayoutDesignToken = {
    hashId: string;
    colorPrimary: string;
    /**
     * 跨站点应用的图标hover颜色
     */
    colorBgAppListIconHover: string;
    /**
     * 跨站点应用的图标hover颜色
     */
    colorTextAppListIconHover: string;
    /**
     * 跨站点应用的图标hover颜色
     */
    colorTextAppListIcon: string;
    /**
     * layout 的背景颜色
     */
    bgLayout: string;
    /**
     * 侧边side的 token 配置
     */
    sider: {
        colorBgCollapsedButton: string;
        colorTextCollapsedButtonHover: string;
        colorTextCollapsedButton: string;
        colorMenuBackground: string;
        colorBgMenuItemCollapsedHover: string;
        colorBgMenuItemCollapsedSelected: string;
        colorMenuItemDivider: string;
        colorBgMenuItemHover: string;
        colorBgMenuItemSelected: string;
        colorTextMenuSelected: string;
        colorTextMenuActive: string;
        colorTextMenu: string;
        colorTextMenuSecondary: string;
        paddingInlineLayoutMenu: number;
        paddingBlockLayoutMenu: number;
        /**
         * menu 顶部 title 的字体颜色
         */
        colorTextMenuTitle: string;
        colorTextSubMenuSelected: string;
    };
    /**
     * header 的 token 设置
     */
    header: {
        colorBgHeader: string;
        colorHeaderTitle: string;
        colorBgMenuItemHover: string;
        colorBgMenuItemSelected: string;
        colorTextMenuSelected: string;
        colorTextMenuActive: string;
        colorTextMenu: string;
        colorTextMenuSecondary: string;
        colorBgRightActionsItemHover: string;
        colorTextRightActionsItem: string;
        heightLayoutHeader: number;
    };
    /**
     * pageContainer
     */
    pageContainer: {
        /**
         * pageContainer 的背景颜色
         */
        colorBgPageContainer: string;
        /**
         * pageContainer 自带的 margin inline
         */
        marginInlinePageContainerContent: number;
        /**
         * pageContainer 自带的 margin block
         */
        marginBlockPageContainerContent: number;
        /**
         * pageContainer 被固定时的背景颜色
         */
        colorBgPageContainerFixed: string;
    };
};
declare type DeepPartial<T> = T extends object ? {
    [P in keyof T]?: DeepPartial<T[P]>;
} : T;
export declare type LayoutDesignToken = BaseLayoutDesignToken & GlobalToken;
export declare const getLayoutDesignToken: (baseDesignTokens: DeepPartial<LayoutDesignToken>, antdToken: Record<string, any>) => LayoutDesignToken;
export declare const ProLayoutContext: React.Context<LayoutDesignToken>;
export declare type ProLayoutProviderProps = {
    token?: DeepPartial<LayoutDesignToken>;
    children?: React.ReactNode;
};
export declare const ProLayoutProvider: React.FC<ProLayoutProviderProps>;
export {};
