import _objectSpread from "@babel/runtime/helpers/esm/objectSpread2";
import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import { useStyle as useAntdStyle } from '@ant-design/pro-utils';
import { useContext } from 'react';
import { ProLayoutContext } from '../../context/ProLayoutContext';

var genTopNavHeaderStyle = function genTopNavHeaderStyle(token) {
  return _defineProperty({}, token.componentCls, {
    position: 'relative',
    width: '100%',
    height: '100%',
    backgroundColor: 'transparent',
    '.anticon': {
      color: 'inherit'
    },
    '&-main': {
      display: 'flex',
      height: '100%',
      paddingInlineStart: '16px',
      '&-left': _defineProperty({
        display: 'flex',
        alignItems: 'center',
        minWidth: '192px'
      }, "".concat(token.proComponentsCls, "-layout-apps-icon"), {
        marginInlineEnd: 16,
        marginInlineStart: -8
      })
    },
    '&-logo': {
      position: 'relative',
      minWidth: '165px',
      display: 'flex',
      height: '100%',
      alignItems: 'center',
      overflow: 'hidden',
      '> *:first-child': {
        display: 'flex',
        alignItems: 'center',
        minHeight: '22px',
        fontSize: '22px'
      },
      '> *:first-child > img': {
        display: 'inline-block',
        height: '32px',
        verticalAlign: 'middle'
      },
      '> *:first-child > h1': {
        display: 'inline-block',
        marginBlock: 0,
        marginInline: 0,
        lineHeight: '24px',
        marginInlineStart: 6,
        fontWeight: '600',
        fontSize: '16px',
        color: token === null || token === void 0 ? void 0 : token.colorHeaderTitle,
        verticalAlign: 'top'
      }
    },
    '&-menu': {
      minWidth: 0,
      display: 'flex',
      alignItems: 'center',
      paddingInline: 6,
      paddingBlock: 6,
      lineHeight: "".concat(token.heightLayoutHeader - 12, "px")
    }
  });
};

export function useStyle(prefixCls) {
  var _useContext = useContext(ProLayoutContext),
      header = _useContext.header;

  return useAntdStyle('top-nav-header', function (token) {
    var topNavHeaderToken = _objectSpread(_objectSpread({}, token), {}, {
      componentCls: ".".concat(prefixCls)
    }, header);

    return [genTopNavHeaderStyle(topNavHeaderToken)];
  });
}