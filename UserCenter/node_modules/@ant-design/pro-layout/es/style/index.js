import _objectSpread from "@babel/runtime/helpers/esm/objectSpread2";
import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import { useStyle as useAntdStyle } from '@ant-design/pro-utils';
import { version } from 'antd';
import { useContext } from 'react';
import { ProLayoutContext } from '../context/ProLayoutContext';
/**
 * 主要区别：
 * 需要手动引入 import 'antd/dist/antd.css';
 * 需要重置 menu 的样式
 * @param token
 * @returns
 */

var compatibleStyle = function compatibleStyle(token) {
  var _$concat$concat, _$concat5, _$concat6, _$concat8, _$concat9, _token$componentCls, _$concat$concat2, _$concat11, _ref;

  if (version.startsWith('5')) {
    return {};
  }

  return _ref = {}, _defineProperty(_ref, token.proComponentsCls, {
    width: '100%',
    height: '100%'
  }), _defineProperty(_ref, token.componentCls, (_token$componentCls = {
    width: '100%',
    height: '100%'
  }, _defineProperty(_token$componentCls, "".concat(token.proComponentsCls, "-base-menu"), (_$concat6 = {
    color: token.sider.colorTextMenu
  }, _defineProperty(_$concat6, "".concat(token.antCls, "-menu-sub"), {
    color: token.sider.colorTextMenu
  }), _defineProperty(_$concat6, "& ".concat(token.antCls, "-layout"), {
    backgroundColor: 'transparent',
    width: '100%'
  }), _defineProperty(_$concat6, "".concat(token.antCls, "-menu-submenu-expand-icon, ").concat(token.antCls, "-menu-submenu-arrow"), {
    color: 'inherit'
  }), _defineProperty(_$concat6, "&".concat(token.antCls, "-menu"), _defineProperty({
    color: token.sider.colorTextMenu
  }, "".concat(token.antCls, "-menu-item a"), {
    color: 'inherit'
  })), _defineProperty(_$concat6, "&".concat(token.antCls, "-menu-inline"), _defineProperty({}, "".concat(token.antCls, "-menu-selected::after,").concat(token.antCls, "-menu-item-selected::after"), {
    display: 'none'
  })), _defineProperty(_$concat6, "".concat(token.antCls, "-menu-sub ").concat(token.antCls, "-menu-inline"), {
    backgroundColor: 'transparent!important'
  }), _defineProperty(_$concat6, "".concat(token.antCls, "-menu-item:active, \n        ").concat(token.antCls, "-menu-submenu-title:active"), {
    backgroundColor: 'transparent!important'
  }), _defineProperty(_$concat6, "&".concat(token.antCls, "-menu-light"), _defineProperty({}, "".concat(token.antCls, "-menu-item:hover, \n            ").concat(token.antCls, "-menu-item-active,\n            ").concat(token.antCls, "-menu-submenu-active, \n            ").concat(token.antCls, "-menu-submenu-title:hover"), _defineProperty({
    color: token.sider.colorTextMenuActive,
    borderRadius: token.radiusBase
  }, "".concat(token.antCls, "-menu-submenu-arrow"), {
    color: token.sider.colorTextMenuActive
  }))), _defineProperty(_$concat6, "&".concat(token.antCls, "-menu:not(").concat(token.antCls, "-menu-horizontal)"), (_$concat$concat = {}, _defineProperty(_$concat$concat, "".concat(token.antCls, "-menu-item-selected"), {
    backgroundColor: token.sider.colorBgMenuItemSelected,
    borderRadius: token.radiusBase
  }), _defineProperty(_$concat$concat, "".concat(token.antCls, "-menu-item:hover, \n            ").concat(token.antCls, "-menu-item-active,\n            ").concat(token.antCls, "-menu-submenu-title:hover"), _defineProperty({
    color: token.sider.colorTextMenuActive,
    borderRadius: token.radiusBase
  }, "".concat(token.antCls, "-menu-submenu-arrow"), {
    color: token.sider.colorTextMenuActive
  })), _$concat$concat)), _defineProperty(_$concat6, "".concat(token.antCls, "-menu-item-selected"), {
    color: token.sider.colorTextMenuSelected
  }), _defineProperty(_$concat6, "".concat(token.antCls, "-menu-submenu-selected"), {
    color: token.sider.colorTextMenuSelected
  }), _defineProperty(_$concat6, "&".concat(token.antCls, "-menu:not(").concat(token.antCls, "-menu-inline) ").concat(token.antCls, "-menu-submenu-open"), {
    color: token.sider.colorTextMenuSelected
  }), _defineProperty(_$concat6, "&".concat(token.antCls, "-menu-vertical"), _defineProperty({}, "".concat(token.antCls, "-menu-submenu-selected"), {
    borderRadius: token.radiusBase,
    color: token.sider.colorTextMenuSelected
  })), _defineProperty(_$concat6, "".concat(token.antCls, "-menu-submenu:hover > ").concat(token.antCls, "-menu-submenu-title > ").concat(token.antCls, "-menu-submenu-arrow"), {
    color: token.sider.colorTextMenuActive
  }), _defineProperty(_$concat6, "&".concat(token.antCls, "-menu-horizontal"), (_$concat5 = {}, _defineProperty(_$concat5, "".concat(token.antCls, "-menu-item:hover,\n          ").concat(token.antCls, "-menu-submenu:hover,\n          ").concat(token.antCls, "-menu-item-active,\n          ").concat(token.antCls, "-menu-submenu-active"), {
    borderRadius: 4,
    color: token.header.colorTextMenuActive
  }), _defineProperty(_$concat5, "".concat(token.antCls, "-menu-item-open,\n          ").concat(token.antCls, "-menu-submenu-open,\n          ").concat(token.antCls, "-menu-item-selected,\n          ").concat(token.antCls, "-menu-submenu-selected"), _defineProperty({
    backgroundColor: token.header.colorBgMenuItemSelected,
    borderRadius: token.radiusBase,
    color: token.header.colorTextMenuSelected
  }, "".concat(token.antCls, "-menu-submenu-arrow"), {
    color: token.header.colorTextMenuSelected
  })), _defineProperty(_$concat5, "> ".concat(token.antCls, "-menu-item, > ").concat(token.antCls, "-menu-submenu"), {
    paddingInline: 16,
    marginInline: 4
  }), _defineProperty(_$concat5, "> ".concat(token.antCls, "-menu-item::after, > ").concat(token.antCls, "-menu-submenu::after"), {
    display: 'none'
  }), _$concat5)), _$concat6)), _defineProperty(_token$componentCls, "".concat(token.proComponentsCls, "-top-nav-header-base-menu"), (_$concat9 = {}, _defineProperty(_$concat9, "&".concat(token.antCls, "-menu"), _defineProperty({
    color: token.header.colorTextMenu
  }, "".concat(token.antCls, "-menu-item a"), {
    color: 'inherit'
  })), _defineProperty(_$concat9, "&".concat(token.antCls, "-menu-light"), (_$concat8 = {}, _defineProperty(_$concat8, "".concat(token.antCls, "-menu-item:hover, \n            ").concat(token.antCls, "-menu-item-active,\n            ").concat(token.antCls, "-menu-submenu-active, \n            ").concat(token.antCls, "-menu-submenu-title:hover"), _defineProperty({
    color: token.header.colorTextMenuActive,
    borderRadius: token.radiusBase
  }, "".concat(token.antCls, "-menu-submenu-arrow"), {
    color: token.header.colorTextMenuActive
  })), _defineProperty(_$concat8, "".concat(token.antCls, "-menu-item-selected"), {
    color: token.header.colorTextMenuActive,
    fontWeight: 'bold',
    borderRadius: token.radiusBase
  }), _$concat8)), _$concat9)), _token$componentCls)), _defineProperty(_ref, "".concat(token.antCls, "-menu-sub").concat(token.antCls, "-menu-inline"), {
    backgroundColor: 'transparent!important'
  }), _defineProperty(_ref, "".concat(token.antCls, "-menu-submenu-popup"), (_$concat11 = {
    backgroundColor: 'rgba(255, 255, 255, 0.42)',
    '-webkit-backdrop-filter': 'blur(8px)',
    backdropFilter: 'blur(8px)'
  }, _defineProperty(_$concat11, "".concat(token.antCls, "-menu"), _defineProperty({
    background: 'transparent !important',
    backgroundColor: 'transparent !important'
  }, "".concat(token.antCls, "-menu-item:active, \n        ").concat(token.antCls, "-menu-submenu-title:active"), {
    backgroundColor: 'transparent!important'
  })), _defineProperty(_$concat11, "".concat(token.antCls, "-menu-item-selected"), {
    color: token.sider.colorTextMenuSelected,
    fontWeight: 'bold'
  }), _defineProperty(_$concat11, "".concat(token.antCls, "-menu-submenu-selected"), {
    color: token.sider.colorTextMenuSelected,
    fontWeight: 'bold'
  }), _defineProperty(_$concat11, "".concat(token.antCls, "-menu:not(").concat(token.antCls, "-menu-horizontal)"), (_$concat$concat2 = {}, _defineProperty(_$concat$concat2, "".concat(token.antCls, "-menu-item-selected"), {
    backgroundColor: 'rgba(0, 0, 0, 0.04)',
    borderRadius: token.radiusBase,
    color: token.sider.colorTextMenuSelected,
    fontWeight: 'bold'
  }), _defineProperty(_$concat$concat2, "".concat(token.antCls, "-menu-item:hover, \n          ").concat(token.antCls, "-menu-item-active,\n          ").concat(token.antCls, "-menu-submenu-title:hover"), _defineProperty({
    color: token.sider.colorTextMenuActive,
    borderRadius: token.radiusBase
  }, "".concat(token.antCls, "-menu-submenu-arrow"), {
    color: token.sider.colorTextMenuActive
  })), _$concat$concat2)), _$concat11)), _ref;
};

var genProLayoutStyle = function genProLayoutStyle(token) {
  var _$concat12, _token$proComponentsC;

  return _defineProperty({
    body: {
      paddingBlock: 0,
      paddingInline: 0,
      marginBlock: 0,
      marginInline: 0,
      fontFamily: token.fontFamily
    }
  }, token.proComponentsCls, (_token$proComponentsC = {}, _defineProperty(_token$proComponentsC, "".concat(token.antCls, "-layout"), {
    backgroundColor: 'transparent !important'
  }), _defineProperty(_token$proComponentsC, "& ".concat(token.componentCls), (_$concat12 = {}, _defineProperty(_$concat12, "& ".concat(token.antCls, "-layout"), {
    display: 'flex',
    backgroundColor: 'transparent',
    width: '100%'
  }), _defineProperty(_$concat12, "".concat(token.componentCls, "-content"), {
    display: 'flex',
    flexDirection: 'column',
    width: '100%',
    backgroundColor: 'transparent',
    position: 'relative',
    '*': {
      boxSizing: 'border-box'
    },
    marginBlock: token.pageContainer.marginBlockPageContainerContent,
    marginInline: token.pageContainer.marginInlinePageContainerContent,
    '&-has-page-container': {
      margin: 0
    }
  }), _defineProperty(_$concat12, "".concat(token.componentCls, "-container"), {
    width: '100%',
    display: 'flex',
    flexDirection: 'column',
    minWidth: 0,
    minHeight: 0
  }), _defineProperty(_$concat12, "".concat(token.componentCls, "-bg-list"), {
    pointerEvents: 'none',
    position: 'fixed',
    overflow: 'hidden',
    insetBlockStart: 0,
    insetInlineStart: 0,
    zIndex: 0,
    height: '100%',
    width: '100%',
    background: token.bgLayout
  }), _$concat12)), _defineProperty(_token$proComponentsC, "".concat(token.antCls, "-menu-submenu-popup"), {
    backgroundColor: 'rgba(255, 255, 255, 0.42)',
    '-webkit-backdrop-filter': 'blur(8px)',
    backdropFilter: 'blur(8px)'
  }), _token$proComponentsC));
};

export function useStyle(prefixCls) {
  var proToken = useContext(ProLayoutContext);
  return useAntdStyle('pro-layout', function (token) {
    var proLayoutToken = _objectSpread(_objectSpread({}, token), {}, {
      componentCls: ".".concat(prefixCls)
    }, proToken);

    return [genProLayoutStyle(proLayoutToken), compatibleStyle(proLayoutToken)];
  });
}