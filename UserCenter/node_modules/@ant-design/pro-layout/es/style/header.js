import _objectSpread from "@babel/runtime/helpers/esm/objectSpread2";
import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import { useStyle as useAntdStyle } from '@ant-design/pro-utils';
import { useContext } from 'react';
import { ProLayoutContext } from '../context/ProLayoutContext';

var genProLayoutHeaderStyle = function genProLayoutHeaderStyle(token) {
  return _defineProperty({}, token.proLayoutCls, _defineProperty({}, ".ant-layout-header".concat(token.componentCls), {
    height: token.ProLayoutHeaderHeaderHeight,
    lineHeight: "".concat(token.ProLayoutHeaderHeaderHeight, "px"),
    // hitu 用了这个属性，不能删除哦 @南取
    zIndex: 19,
    width: '100%',
    paddingBlock: 0,
    paddingInline: 8,
    borderBlockEnd: "1px solid ".concat(token.colorSplit),
    backgroundColor: token.colorBgHeader || 'rgba(255, 255, 255, 0.4)',
    WebkitBackdropFilter: 'blur(8px)',
    backdropFilter: 'blur(8px)',
    '&-fixed-header': {
      position: 'fixed',
      insetBlockStart: 0,
      width: '100%',
      zIndex: 100,
      insetInlineEnd: 0
    },
    '&-header-actions': {
      display: 'flex',
      alignItems: 'center',
      fontSize: '16',
      cursor: 'pointer',
      '& &-item': {
        paddingBlock: 0,
        paddingInline: 8,
        '&:hover': {
          color: token.colorText
        }
      }
    },
    '&-header-realDark': {
      boxShadow: '0 2px 8px 0 rgba(0, 0, 0, 65%)'
    },
    '&-header-actions-header-action': {
      transition: 'width 0.3s cubic-bezier(0.645, 0.045, 0.355, 1)'
    }
  }));
};

export function useStyle(prefixCls, props) {
  var _useContext = useContext(ProLayoutContext),
      header = _useContext.header;

  return useAntdStyle('pro-layout-header', function (token) {
    var ProLayoutHeaderToken = _objectSpread(_objectSpread({}, token), {}, {
      componentCls: ".".concat(prefixCls),
      proLayoutCls: ".".concat(props.proLayoutCls),
      ProLayoutHeaderHeaderHeight: header.heightLayoutHeader
    }, header);

    return [genProLayoutHeaderStyle(ProLayoutHeaderToken)];
  });
}